// Generated from PacketDsl.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class PacketDslLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly UINT8 = 13;
	public static readonly UINT16 = 14;
	public static readonly UINT32 = 15;
	public static readonly UINT64 = 16;
	public static readonly INT8 = 17;
	public static readonly INT16 = 18;
	public static readonly INT32 = 19;
	public static readonly INT64 = 20;
	public static readonly FLOAT32 = 21;
	public static readonly FLOAT64 = 22;
	public static readonly DIGITS = 23;
	public static readonly STRING = 24;
	public static readonly ROOT = 25;
	public static readonly PACKET = 26;
	public static readonly REPEAT = 27;
	public static readonly METADATA = 28;
	public static readonly MATCH = 29;
	public static readonly COLON = 30;
	public static readonly COMMA = 31;
	public static readonly SEMICOLON = 32;
	public static readonly IDENTIFIER = 33;
	public static readonly STRING_LITERAL = 34;
	public static readonly LINE_COMMENT = 35;
	public static readonly WS = 36;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "UINT8", "UINT16", "UINT32", "UINT64", "INT8", 
		"INT16", "INT32", "INT64", "FLOAT32", "FLOAT64", "DIGITS", "STRING", "ROOT", 
		"PACKET", "REPEAT", "METADATA", "MATCH", "COLON", "COMMA", "SEMICOLON", 
		"IDENTIFIER", "STRING_LITERAL", "LINE_COMMENT", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'options'", "'{'", "'}'", "'='", "'lengthof('", "')'", "'string'", 
		"'char'", "'char['", "']'", "'as'", "'['", undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, "'root'", "'packet'", "'repeat'", "'MetaData'", 
		"'match'", "':'", "','", "';'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "UINT8", 
		"UINT16", "UINT32", "UINT64", "INT8", "INT16", "INT32", "INT64", "FLOAT32", 
		"FLOAT64", "DIGITS", "STRING", "ROOT", "PACKET", "REPEAT", "METADATA", 
		"MATCH", "COLON", "COMMA", "SEMICOLON", "IDENTIFIER", "STRING_LITERAL", 
		"LINE_COMMENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(PacketDslLexer._LITERAL_NAMES, PacketDslLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return PacketDslLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(PacketDslLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "PacketDsl.g4"; }

	// @Override
	public get ruleNames(): string[] { return PacketDslLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return PacketDslLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return PacketDslLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return PacketDslLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02&\u0141\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03\n\x03\n\x03\n\x03\n\x03\v\x03\v\x03" +
		"\f\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x05\x0E\x86\n\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x05\x0F\x91\n\x0F\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10\x9C\n\x10" +
		"\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x05\x11\xA7\n\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x05" +
		"\x12\xAF\n\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x05\x13\xB9\n\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x05\x14\xC3\n\x14\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x05\x15\xCD\n\x15\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x05\x16\xD9" +
		"\n\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x05\x17\xE5\n\x17\x03\x18\x06\x18\xE8\n\x18\r\x18\x0E" +
		"\x18\xE9\x03\x19\x03\x19\x03\x19\x03\x19\x07\x19\xF0\n\x19\f\x19\x0E\x19" +
		"\xF3\v\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03" +
		"\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03" +
		"\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03" +
		"\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x07\"\u0121" +
		"\n\"\f\"\x0E\"\u0124\v\"\x03#\x03#\x03#\x07#\u0129\n#\f#\x0E#\u012C\v" +
		"#\x03#\x03#\x03$\x03$\x03$\x03$\x07$\u0134\n$\f$\x0E$\u0137\v$\x03$\x03" +
		"$\x03%\x06%\u013C\n%\r%\x0E%\u013D\x03%\x03%\x02\x02\x02&\x03\x02\x03" +
		"\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02" +
		"\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F" +
		"\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18" +
		"/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 " +
		"?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&\x03\x02\t\x03\x022;\x06\x02\f\f" +
		"\x0F\x0F$$^^\x05\x02C\\aac|\x06\x022;C\\aac|\x03\x02bb\x04\x02\f\f\x0F" +
		"\x0F\x05\x02\v\f\x0F\x0F\"\"\x02\u0152\x02\x03\x03\x02\x02\x02\x02\x05" +
		"\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03" +
		"\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03" +
		"\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03" +
		"\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03" +
		"\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02" +
		"\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02" +
		"\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03" +
		"\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02" +
		"\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02" +
		"?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02" +
		"\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x03K\x03\x02\x02\x02" +
		"\x05S\x03\x02\x02\x02\x07U\x03\x02\x02\x02\tW\x03\x02\x02\x02\vY\x03\x02" +
		"\x02\x02\rc\x03\x02\x02\x02\x0Fe\x03\x02\x02\x02\x11l\x03\x02\x02\x02" +
		"\x13q\x03\x02\x02\x02\x15w\x03\x02\x02\x02\x17y\x03\x02\x02\x02\x19|\x03" +
		"\x02\x02\x02\x1B\x85\x03\x02\x02\x02\x1D\x90\x03\x02\x02\x02\x1F\x9B\x03" +
		"\x02\x02\x02!\xA6\x03\x02\x02\x02#\xAE\x03\x02\x02\x02%\xB8\x03\x02\x02" +
		"\x02\'\xC2\x03\x02\x02\x02)\xCC\x03\x02\x02\x02+\xD8\x03\x02\x02\x02-" +
		"\xE4\x03\x02\x02\x02/\xE7\x03\x02\x02\x021\xEB\x03\x02\x02\x023\xF6\x03" +
		"\x02\x02\x025\xFB\x03\x02\x02\x027\u0102\x03\x02\x02\x029\u0109\x03\x02" +
		"\x02\x02;\u0112\x03\x02\x02\x02=\u0118\x03\x02\x02\x02?\u011A\x03\x02" +
		"\x02\x02A\u011C\x03\x02\x02\x02C\u011E\x03\x02\x02\x02E\u0125\x03\x02" +
		"\x02\x02G\u012F\x03\x02\x02\x02I\u013B\x03\x02\x02\x02KL\x07q\x02\x02" +
		"LM\x07r\x02\x02MN\x07v\x02\x02NO\x07k\x02\x02OP\x07q\x02\x02PQ\x07p\x02" +
		"\x02QR\x07u\x02\x02R\x04\x03\x02\x02\x02ST\x07}\x02\x02T\x06\x03\x02\x02" +
		"\x02UV\x07\x7F\x02\x02V\b\x03\x02\x02\x02WX\x07?\x02\x02X\n\x03\x02\x02" +
		"\x02YZ\x07n\x02\x02Z[\x07g\x02\x02[\\\x07p\x02\x02\\]\x07i\x02\x02]^\x07" +
		"v\x02\x02^_\x07j\x02\x02_`\x07q\x02\x02`a\x07h\x02\x02ab\x07*\x02\x02" +
		"b\f\x03\x02\x02\x02cd\x07+\x02\x02d\x0E\x03\x02\x02\x02ef\x07u\x02\x02" +
		"fg\x07v\x02\x02gh\x07t\x02\x02hi\x07k\x02\x02ij\x07p\x02\x02jk\x07i\x02" +
		"\x02k\x10\x03\x02\x02\x02lm\x07e\x02\x02mn\x07j\x02\x02no\x07c\x02\x02" +
		"op\x07t\x02\x02p\x12\x03\x02\x02\x02qr\x07e\x02\x02rs\x07j\x02\x02st\x07" +
		"c\x02\x02tu\x07t\x02\x02uv\x07]\x02\x02v\x14\x03\x02\x02\x02wx\x07_\x02" +
		"\x02x\x16\x03\x02\x02\x02yz\x07c\x02\x02z{\x07u\x02\x02{\x18\x03\x02\x02" +
		"\x02|}\x07]\x02\x02}\x1A\x03\x02\x02\x02~\x7F\x07w\x02\x02\x7F\x80\x07" +
		"k\x02\x02\x80\x81\x07p\x02\x02\x81\x82\x07v\x02\x02\x82\x86\x07:\x02\x02" +
		"\x83\x84\x07w\x02\x02\x84\x86\x07:\x02\x02\x85~\x03\x02\x02\x02\x85\x83" +
		"\x03\x02\x02\x02\x86\x1C\x03\x02\x02\x02\x87\x88\x07w\x02\x02\x88\x89" +
		"\x07k\x02\x02\x89\x8A\x07p\x02\x02\x8A\x8B\x07v\x02\x02\x8B\x8C\x073\x02" +
		"\x02\x8C\x91\x078\x02\x02\x8D\x8E\x07w\x02\x02\x8E\x8F\x073\x02\x02\x8F" +
		"\x91\x078\x02\x02\x90\x87\x03\x02\x02\x02\x90\x8D\x03\x02\x02\x02\x91" +
		"\x1E\x03\x02\x02\x02\x92\x93\x07w\x02\x02\x93\x94\x07k\x02\x02\x94\x95" +
		"\x07p\x02\x02\x95\x96\x07v\x02\x02\x96\x97\x075\x02\x02\x97\x9C\x074\x02" +
		"\x02\x98\x99\x07w\x02\x02\x99\x9A\x075\x02\x02\x9A\x9C\x074\x02\x02\x9B" +
		"\x92\x03\x02\x02\x02\x9B\x98\x03\x02\x02\x02\x9C \x03\x02\x02\x02\x9D" +
		"\x9E\x07w\x02\x02\x9E\x9F\x07k\x02\x02\x9F\xA0\x07p\x02\x02\xA0\xA1\x07" +
		"v\x02\x02\xA1\xA2\x078\x02\x02\xA2\xA7\x076\x02\x02\xA3\xA4\x07w\x02\x02" +
		"\xA4\xA5\x078\x02\x02\xA5\xA7\x076\x02\x02\xA6\x9D\x03\x02\x02\x02\xA6" +
		"\xA3\x03\x02\x02\x02\xA7\"\x03\x02\x02\x02\xA8\xA9\x07k\x02\x02\xA9\xAA" +
		"\x07p\x02\x02\xAA\xAB\x07v\x02\x02\xAB\xAF\x07:\x02\x02\xAC\xAD\x07k\x02" +
		"\x02\xAD\xAF\x07:\x02\x02\xAE\xA8\x03\x02\x02\x02\xAE\xAC\x03\x02\x02" +
		"\x02\xAF$\x03\x02\x02\x02\xB0\xB1\x07k\x02\x02\xB1\xB2\x07p\x02\x02\xB2" +
		"\xB3\x07v\x02\x02\xB3\xB4\x073\x02\x02\xB4\xB9\x078\x02\x02\xB5\xB6\x07" +
		"k\x02\x02\xB6\xB7\x073\x02\x02\xB7\xB9\x078\x02\x02\xB8\xB0\x03\x02\x02" +
		"\x02\xB8\xB5\x03\x02\x02\x02\xB9&\x03\x02\x02\x02\xBA\xBB\x07k\x02\x02" +
		"\xBB\xBC\x07p\x02\x02\xBC\xBD\x07v\x02\x02\xBD\xBE\x075\x02\x02\xBE\xC3" +
		"\x074\x02\x02\xBF\xC0\x07k\x02\x02\xC0\xC1\x075\x02\x02\xC1\xC3\x074\x02" +
		"\x02\xC2\xBA\x03\x02\x02\x02\xC2\xBF\x03\x02\x02\x02\xC3(\x03\x02\x02" +
		"\x02\xC4\xC5\x07k\x02\x02\xC5\xC6\x07p\x02\x02\xC6\xC7\x07v\x02\x02\xC7" +
		"\xC8\x078\x02\x02\xC8\xCD\x076\x02\x02\xC9\xCA\x07k\x02\x02\xCA\xCB\x07" +
		"8\x02\x02\xCB\xCD\x076\x02\x02\xCC\xC4\x03\x02\x02\x02\xCC\xC9\x03\x02" +
		"\x02\x02\xCD*\x03\x02\x02\x02\xCE\xCF\x07h\x02\x02\xCF\xD0\x07n\x02\x02" +
		"\xD0\xD1\x07q\x02\x02\xD1\xD2\x07c\x02\x02\xD2\xD3\x07v\x02\x02\xD3\xD4" +
		"\x075\x02\x02\xD4\xD9\x074\x02\x02\xD5\xD6\x07h\x02\x02\xD6\xD7\x075\x02" +
		"\x02\xD7\xD9\x074\x02\x02\xD8\xCE\x03\x02\x02\x02\xD8\xD5\x03\x02\x02" +
		"\x02\xD9,\x03\x02\x02\x02\xDA\xDB\x07h\x02\x02\xDB\xDC\x07n\x02\x02\xDC" +
		"\xDD\x07q\x02\x02\xDD\xDE\x07c\x02\x02\xDE\xDF\x07v\x02\x02\xDF\xE0\x07" +
		"8\x02\x02\xE0\xE5\x076\x02\x02\xE1\xE2\x07h\x02\x02\xE2\xE3\x078\x02\x02" +
		"\xE3\xE5\x076\x02\x02\xE4\xDA\x03\x02\x02\x02\xE4\xE1\x03\x02\x02\x02" +
		"\xE5.\x03\x02\x02\x02\xE6\xE8\t\x02\x02\x02\xE7\xE6\x03\x02\x02\x02\xE8" +
		"\xE9\x03\x02\x02\x02\xE9\xE7\x03\x02\x02\x02\xE9\xEA\x03\x02\x02\x02\xEA" +
		"0\x03\x02\x02\x02\xEB\xF1\x07$\x02\x02\xEC\xF0\n\x03\x02\x02\xED\xEE\x07" +
		"^\x02\x02\xEE\xF0\v\x02\x02\x02\xEF\xEC\x03\x02\x02\x02\xEF\xED\x03\x02" +
		"\x02\x02\xF0\xF3\x03\x02\x02\x02\xF1\xEF\x03\x02\x02\x02\xF1\xF2\x03\x02" +
		"\x02\x02\xF2\xF4\x03\x02\x02\x02\xF3\xF1\x03\x02\x02\x02\xF4\xF5\x07$" +
		"\x02\x02\xF52\x03\x02\x02\x02\xF6\xF7\x07t\x02\x02\xF7\xF8\x07q\x02\x02" +
		"\xF8\xF9\x07q\x02\x02\xF9\xFA\x07v\x02\x02\xFA4\x03\x02\x02\x02\xFB\xFC" +
		"\x07r\x02\x02\xFC\xFD\x07c\x02\x02\xFD\xFE\x07e\x02\x02\xFE\xFF\x07m\x02" +
		"\x02\xFF\u0100\x07g\x02\x02\u0100\u0101\x07v\x02\x02\u01016\x03\x02\x02" +
		"\x02\u0102\u0103\x07t\x02\x02\u0103\u0104\x07g\x02\x02\u0104\u0105\x07" +
		"r\x02\x02\u0105\u0106\x07g\x02\x02\u0106\u0107\x07c\x02\x02\u0107\u0108" +
		"\x07v\x02\x02\u01088\x03\x02\x02\x02\u0109\u010A\x07O\x02\x02\u010A\u010B" +
		"\x07g\x02\x02\u010B\u010C\x07v\x02\x02\u010C\u010D\x07c\x02\x02\u010D" +
		"\u010E\x07F\x02\x02\u010E\u010F\x07c\x02\x02\u010F\u0110\x07v\x02\x02" +
		"\u0110\u0111\x07c\x02\x02\u0111:\x03\x02\x02\x02\u0112\u0113\x07o\x02" +
		"\x02\u0113\u0114\x07c\x02\x02\u0114\u0115\x07v\x02\x02\u0115\u0116\x07" +
		"e\x02\x02\u0116\u0117\x07j\x02\x02\u0117<\x03\x02\x02\x02\u0118\u0119" +
		"\x07<\x02\x02\u0119>\x03\x02\x02\x02\u011A\u011B\x07.\x02\x02\u011B@\x03" +
		"\x02\x02\x02\u011C\u011D\x07=\x02\x02\u011DB\x03\x02\x02\x02\u011E\u0122" +
		"\t\x04\x02\x02\u011F\u0121\t\x05\x02\x02\u0120\u011F\x03\x02\x02\x02\u0121" +
		"\u0124\x03\x02\x02\x02\u0122\u0120\x03\x02\x02\x02\u0122\u0123\x03\x02" +
		"\x02\x02\u0123D\x03\x02\x02\x02\u0124\u0122\x03\x02\x02\x02\u0125\u012A" +
		"\x07b\x02\x02\u0126\u0129\n\x06\x02\x02\u0127\u0129\t\x07\x02\x02\u0128" +
		"\u0126\x03\x02\x02\x02\u0128\u0127\x03\x02\x02\x02\u0129\u012C\x03\x02" +
		"\x02\x02\u012A\u0128\x03\x02\x02\x02\u012A\u012B\x03\x02\x02\x02\u012B" +
		"\u012D\x03\x02\x02\x02\u012C\u012A\x03\x02\x02\x02\u012D\u012E\x07b\x02" +
		"\x02\u012EF\x03\x02\x02\x02\u012F\u0130\x071\x02\x02\u0130\u0131\x071" +
		"\x02\x02\u0131\u0135\x03\x02\x02\x02\u0132\u0134\n\x07\x02\x02\u0133\u0132" +
		"\x03\x02\x02\x02\u0134\u0137\x03\x02\x02\x02\u0135\u0133\x03\x02\x02\x02" +
		"\u0135\u0136\x03\x02\x02\x02\u0136\u0138\x03\x02\x02\x02\u0137\u0135\x03" +
		"\x02\x02\x02\u0138\u0139\b$\x02\x02\u0139H\x03\x02\x02\x02\u013A\u013C" +
		"\t\b\x02\x02\u013B\u013A\x03\x02\x02\x02\u013C\u013D\x03\x02\x02\x02\u013D" +
		"\u013B\x03\x02\x02\x02\u013D\u013E\x03\x02\x02\x02\u013E\u013F\x03\x02" +
		"\x02\x02\u013F\u0140\b%\x03\x02\u0140J\x03\x02\x02\x02\x15\x02\x85\x90" +
		"\x9B\xA6\xAE\xB8\xC2\xCC\xD8\xE4\xE9\xEF\xF1\u0122\u0128\u012A\u0135\u013D" +
		"\x04\x02\x03\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!PacketDslLexer.__ATN) {
			PacketDslLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(PacketDslLexer._serializedATN));
		}

		return PacketDslLexer.__ATN;
	}

}

