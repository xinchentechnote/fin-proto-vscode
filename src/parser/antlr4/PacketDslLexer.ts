// Generated from PacketDsl.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class PacketDslLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly T__10 = 11;
	public static readonly T__11 = 12;
	public static readonly T__12 = 13;
	public static readonly T__13 = 14;
	public static readonly T__14 = 15;
	public static readonly T__15 = 16;
	public static readonly T__16 = 17;
	public static readonly UINT8 = 18;
	public static readonly UINT16 = 19;
	public static readonly UINT32 = 20;
	public static readonly UINT64 = 21;
	public static readonly INT8 = 22;
	public static readonly INT16 = 23;
	public static readonly INT32 = 24;
	public static readonly INT64 = 25;
	public static readonly FLOAT32 = 26;
	public static readonly FLOAT64 = 27;
	public static readonly DIGITS = 28;
	public static readonly STRING = 29;
	public static readonly PADDING_CHAR = 30;
	public static readonly ROOT = 31;
	public static readonly PACKET = 32;
	public static readonly REPEAT = 33;
	public static readonly METADATA = 34;
	public static readonly MATCH = 35;
	public static readonly COLON = 36;
	public static readonly COMMA = 37;
	public static readonly SEMICOLON = 38;
	public static readonly IDENTIFIER = 39;
	public static readonly STRING_LITERAL = 40;
	public static readonly LINE_COMMENT = 41;
	public static readonly WS = 42;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"UINT8", "UINT16", "UINT32", "UINT64", "INT8", "INT16", "INT32", "INT64", 
		"FLOAT32", "FLOAT64", "DIGITS", "STRING", "PADDING_CHAR", "ROOT", "PACKET", 
		"REPEAT", "METADATA", "MATCH", "COLON", "COMMA", "SEMICOLON", "IDENTIFIER", 
		"STRING_LITERAL", "LINE_COMMENT", "WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'options'", "'{'", "'}'", "'='", "'@lengthOf('", "')'", "'@calculatedFrom('", 
		"'@'", "'left'", "'right'", "'Padding('", "'string'", "'char'", "'char['", 
		"']'", "'as'", "'['", undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "'root'", "'packet'", "'repeat'", "'MetaData'", "'match'", 
		"':'", "','", "';'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "UINT8", "UINT16", "UINT32", 
		"UINT64", "INT8", "INT16", "INT32", "INT64", "FLOAT32", "FLOAT64", "DIGITS", 
		"STRING", "PADDING_CHAR", "ROOT", "PACKET", "REPEAT", "METADATA", "MATCH", 
		"COLON", "COMMA", "SEMICOLON", "IDENTIFIER", "STRING_LITERAL", "LINE_COMMENT", 
		"WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(PacketDslLexer._LITERAL_NAMES, PacketDslLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return PacketDslLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(PacketDslLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "PacketDsl.g4"; }

	// @Override
	public get ruleNames(): string[] { return PacketDslLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return PacketDslLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return PacketDslLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return PacketDslLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02,\u017D\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03" +
		"\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b" +
		"\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\n\x03" +
		"\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x05\x13\xBA\n\x13" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14" +
		"\x05\x14\xC5\n\x14\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03" +
		"\x15\x03\x15\x03\x15\x05\x15\xD0\n\x15\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x05\x16\xDB\n\x16\x03\x17\x03" +
		"\x17\x03\x17\x03\x17\x03\x17\x03\x17\x05\x17\xE3\n\x17\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x05\x18\xED\n\x18\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x05\x19\xF7" +
		"\n\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x05\x1A\u0101\n\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03" +
		"\x1B\x03\x1B\x03\x1B\x03\x1B\x05\x1B\u010D\n\x1B\x03\x1C\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x03\x1C\x05\x1C\u0119" +
		"\n\x1C\x03\x1D\x06\x1D\u011C\n\x1D\r\x1D\x0E\x1D\u011D\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1E\x07\x1E\u0124\n\x1E\f\x1E\x0E\x1E\u0127\v\x1E\x03\x1E" +
		"\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x05\x1F\u0131" +
		"\n\x1F\x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03!\x03!\x03!\x03!\x03" +
		"\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#\x03#\x03" +
		"#\x03#\x03#\x03$\x03$\x03$\x03$\x03$\x03$\x03%\x03%\x03&\x03&\x03\'\x03" +
		"\'\x03(\x03(\x07(\u015D\n(\f(\x0E(\u0160\v(\x03)\x03)\x03)\x07)\u0165" +
		"\n)\f)\x0E)\u0168\v)\x03)\x03)\x03*\x03*\x03*\x03*\x07*\u0170\n*\f*\x0E" +
		"*\u0173\v*\x03*\x03*\x03+\x06+\u0178\n+\r+\x0E+\u0179\x03+\x03+\x02\x02" +
		"\x02,\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b" +
		"\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02" +
		"\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02" +
		"\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02" +
		"\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(" +
		"O\x02)Q\x02*S\x02+U\x02,\x03\x02\t\x03\x022;\x06\x02\f\f\x0F\x0F$$^^\x05" +
		"\x02C\\aac|\x06\x022;C\\aac|\x03\x02bb\x04\x02\f\f\x0F\x0F\x05\x02\v\f" +
		"\x0F\x0F\"\"\x02\u018F\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02" +
		"\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02" +
		"\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02" +
		"\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02" +
		"\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02" +
		"\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03" +
		"\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02" +
		"\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x02" +
		"3\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02" +
		"\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02" +
		"\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03" +
		"\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02" +
		"\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02" +
		"U\x03\x02\x02\x02\x03W\x03\x02\x02\x02\x05_\x03\x02\x02\x02\x07a\x03\x02" +
		"\x02\x02\tc\x03\x02\x02\x02\ve\x03\x02\x02\x02\rp\x03\x02\x02\x02\x0F" +
		"r\x03\x02\x02\x02\x11\x83\x03\x02\x02\x02\x13\x85\x03\x02\x02\x02\x15" +
		"\x8A\x03\x02\x02\x02\x17\x90\x03\x02\x02\x02\x19\x99\x03\x02\x02\x02\x1B" +
		"\xA0\x03\x02\x02\x02\x1D\xA5\x03\x02\x02\x02\x1F\xAB\x03\x02\x02\x02!" +
		"\xAD\x03\x02\x02\x02#\xB0\x03\x02\x02\x02%\xB9\x03\x02\x02\x02\'\xC4\x03" +
		"\x02\x02\x02)\xCF\x03\x02\x02\x02+\xDA\x03\x02\x02\x02-\xE2\x03\x02\x02" +
		"\x02/\xEC\x03\x02\x02\x021\xF6\x03\x02\x02\x023\u0100\x03\x02\x02\x02" +
		"5\u010C\x03\x02\x02\x027\u0118\x03\x02\x02\x029\u011B\x03\x02\x02\x02" +
		";\u011F\x03\x02\x02\x02=\u0130\x03\x02\x02\x02?\u0132\x03\x02\x02\x02" +
		"A\u0137\x03\x02\x02\x02C\u013E\x03\x02\x02\x02E\u0145\x03\x02\x02\x02" +
		"G\u014E\x03\x02\x02\x02I\u0154\x03\x02\x02\x02K\u0156\x03\x02\x02\x02" +
		"M\u0158\x03\x02\x02\x02O\u015A\x03\x02\x02\x02Q\u0161\x03\x02\x02\x02" +
		"S\u016B\x03\x02\x02\x02U\u0177\x03\x02\x02\x02WX\x07q\x02\x02XY\x07r\x02" +
		"\x02YZ\x07v\x02\x02Z[\x07k\x02\x02[\\\x07q\x02\x02\\]\x07p\x02\x02]^\x07" +
		"u\x02\x02^\x04\x03\x02\x02\x02_`\x07}\x02\x02`\x06\x03\x02\x02\x02ab\x07" +
		"\x7F\x02\x02b\b\x03\x02\x02\x02cd\x07?\x02\x02d\n\x03\x02\x02\x02ef\x07" +
		"B\x02\x02fg\x07n\x02\x02gh\x07g\x02\x02hi\x07p\x02\x02ij\x07i\x02\x02" +
		"jk\x07v\x02\x02kl\x07j\x02\x02lm\x07Q\x02\x02mn\x07h\x02\x02no\x07*\x02" +
		"\x02o\f\x03\x02\x02\x02pq\x07+\x02\x02q\x0E\x03\x02\x02\x02rs\x07B\x02" +
		"\x02st\x07e\x02\x02tu\x07c\x02\x02uv\x07n\x02\x02vw\x07e\x02\x02wx\x07" +
		"w\x02\x02xy\x07n\x02\x02yz\x07c\x02\x02z{\x07v\x02\x02{|\x07g\x02\x02" +
		"|}\x07f\x02\x02}~\x07H\x02\x02~\x7F\x07t\x02\x02\x7F\x80\x07q\x02\x02" +
		"\x80\x81\x07o\x02\x02\x81\x82\x07*\x02\x02\x82\x10\x03\x02\x02\x02\x83" +
		"\x84\x07B\x02\x02\x84\x12\x03\x02\x02\x02\x85\x86\x07n\x02\x02\x86\x87" +
		"\x07g\x02\x02\x87\x88\x07h\x02\x02\x88\x89\x07v\x02\x02\x89\x14\x03\x02" +
		"\x02\x02\x8A\x8B\x07t\x02\x02\x8B\x8C\x07k\x02\x02\x8C\x8D\x07i\x02\x02" +
		"\x8D\x8E\x07j\x02\x02\x8E\x8F\x07v\x02\x02\x8F\x16\x03\x02\x02\x02\x90" +
		"\x91\x07R\x02\x02\x91\x92\x07c\x02\x02\x92\x93\x07f\x02\x02\x93\x94\x07" +
		"f\x02\x02\x94\x95\x07k\x02\x02\x95\x96\x07p\x02\x02\x96\x97\x07i\x02\x02" +
		"\x97\x98\x07*\x02\x02\x98\x18\x03\x02\x02\x02\x99\x9A\x07u\x02\x02\x9A" +
		"\x9B\x07v\x02\x02\x9B\x9C\x07t\x02\x02\x9C\x9D\x07k\x02\x02\x9D\x9E\x07" +
		"p\x02\x02\x9E\x9F\x07i\x02\x02\x9F\x1A\x03\x02\x02\x02\xA0\xA1\x07e\x02" +
		"\x02\xA1\xA2\x07j\x02\x02\xA2\xA3\x07c\x02\x02\xA3\xA4\x07t\x02\x02\xA4" +
		"\x1C\x03\x02\x02\x02\xA5\xA6\x07e\x02\x02\xA6\xA7\x07j\x02\x02\xA7\xA8" +
		"\x07c\x02\x02\xA8\xA9\x07t\x02\x02\xA9\xAA\x07]\x02\x02\xAA\x1E\x03\x02" +
		"\x02\x02\xAB\xAC\x07_\x02\x02\xAC \x03\x02\x02\x02\xAD\xAE\x07c\x02\x02" +
		"\xAE\xAF\x07u\x02\x02\xAF\"\x03\x02\x02\x02\xB0\xB1\x07]\x02\x02\xB1$" +
		"\x03\x02\x02\x02\xB2\xB3\x07w\x02\x02\xB3\xB4\x07k\x02\x02\xB4\xB5\x07" +
		"p\x02\x02\xB5\xB6\x07v\x02\x02\xB6\xBA\x07:\x02\x02\xB7\xB8\x07w\x02\x02" +
		"\xB8\xBA\x07:\x02\x02\xB9\xB2\x03\x02\x02\x02\xB9\xB7\x03\x02\x02\x02" +
		"\xBA&\x03\x02\x02\x02\xBB\xBC\x07w\x02\x02\xBC\xBD\x07k\x02\x02\xBD\xBE" +
		"\x07p\x02\x02\xBE\xBF\x07v\x02\x02\xBF\xC0\x073\x02\x02\xC0\xC5\x078\x02" +
		"\x02\xC1\xC2\x07w\x02\x02\xC2\xC3\x073\x02\x02\xC3\xC5\x078\x02\x02\xC4" +
		"\xBB\x03\x02\x02\x02\xC4\xC1\x03\x02\x02\x02\xC5(\x03\x02\x02\x02\xC6" +
		"\xC7\x07w\x02\x02\xC7\xC8\x07k\x02\x02\xC8\xC9\x07p\x02\x02\xC9\xCA\x07" +
		"v\x02\x02\xCA\xCB\x075\x02\x02\xCB\xD0\x074\x02\x02\xCC\xCD\x07w\x02\x02" +
		"\xCD\xCE\x075\x02\x02\xCE\xD0\x074\x02\x02\xCF\xC6\x03\x02\x02\x02\xCF" +
		"\xCC\x03\x02\x02\x02\xD0*\x03\x02\x02\x02\xD1\xD2\x07w\x02\x02\xD2\xD3" +
		"\x07k\x02\x02\xD3\xD4\x07p\x02\x02\xD4\xD5\x07v\x02\x02\xD5\xD6\x078\x02" +
		"\x02\xD6\xDB\x076\x02\x02\xD7\xD8\x07w\x02\x02\xD8\xD9\x078\x02\x02\xD9" +
		"\xDB\x076\x02\x02\xDA\xD1\x03\x02\x02\x02\xDA\xD7\x03\x02\x02\x02\xDB" +
		",\x03\x02\x02\x02\xDC\xDD\x07k\x02\x02\xDD\xDE\x07p\x02\x02\xDE\xDF\x07" +
		"v\x02\x02\xDF\xE3\x07:\x02\x02\xE0\xE1\x07k\x02\x02\xE1\xE3\x07:\x02\x02" +
		"\xE2\xDC\x03\x02\x02\x02\xE2\xE0\x03\x02\x02\x02\xE3.\x03\x02\x02\x02" +
		"\xE4\xE5\x07k\x02\x02\xE5\xE6\x07p\x02\x02\xE6\xE7\x07v\x02\x02\xE7\xE8" +
		"\x073\x02\x02\xE8\xED\x078\x02\x02\xE9\xEA\x07k\x02\x02\xEA\xEB\x073\x02" +
		"\x02\xEB\xED\x078\x02\x02\xEC\xE4\x03\x02\x02\x02\xEC\xE9\x03\x02\x02" +
		"\x02\xED0\x03\x02\x02\x02\xEE\xEF\x07k\x02\x02\xEF\xF0\x07p\x02\x02\xF0" +
		"\xF1\x07v\x02\x02\xF1\xF2\x075\x02\x02\xF2\xF7\x074\x02\x02\xF3\xF4\x07" +
		"k\x02\x02\xF4\xF5\x075\x02\x02\xF5\xF7\x074\x02\x02\xF6\xEE\x03\x02\x02" +
		"\x02\xF6\xF3\x03\x02\x02\x02\xF72\x03\x02\x02\x02\xF8\xF9\x07k\x02\x02" +
		"\xF9\xFA\x07p\x02\x02\xFA\xFB\x07v\x02\x02\xFB\xFC\x078\x02\x02\xFC\u0101" +
		"\x076\x02\x02\xFD\xFE\x07k\x02\x02\xFE\xFF\x078\x02\x02\xFF\u0101\x07" +
		"6\x02\x02\u0100\xF8\x03\x02\x02\x02\u0100\xFD\x03\x02\x02\x02\u01014\x03" +
		"\x02\x02\x02\u0102\u0103\x07h\x02\x02\u0103\u0104\x07n\x02\x02\u0104\u0105" +
		"\x07q\x02\x02\u0105\u0106\x07c\x02\x02\u0106\u0107\x07v\x02\x02\u0107" +
		"\u0108\x075\x02\x02\u0108\u010D\x074\x02\x02\u0109\u010A\x07h\x02\x02" +
		"\u010A\u010B\x075\x02\x02\u010B\u010D\x074\x02\x02\u010C\u0102\x03\x02" +
		"\x02\x02\u010C\u0109\x03\x02\x02\x02\u010D6\x03\x02\x02\x02\u010E\u010F" +
		"\x07h\x02\x02\u010F\u0110\x07n\x02\x02\u0110\u0111\x07q\x02\x02\u0111" +
		"\u0112\x07c\x02\x02\u0112\u0113\x07v\x02\x02\u0113\u0114\x078\x02\x02" +
		"\u0114\u0119\x076\x02\x02\u0115\u0116\x07h\x02\x02\u0116\u0117\x078\x02" +
		"\x02\u0117\u0119\x076\x02\x02\u0118\u010E\x03\x02\x02\x02\u0118\u0115" +
		"\x03\x02\x02\x02\u01198\x03\x02\x02\x02\u011A\u011C\t\x02\x02\x02\u011B" +
		"\u011A\x03\x02\x02\x02\u011C\u011D\x03\x02\x02\x02\u011D\u011B\x03\x02" +
		"\x02\x02\u011D\u011E\x03\x02\x02\x02\u011E:\x03\x02\x02\x02\u011F\u0125" +
		"\x07$\x02\x02\u0120\u0124\n\x03\x02\x02\u0121\u0122\x07^\x02\x02\u0122" +
		"\u0124\v\x02\x02\x02\u0123\u0120\x03\x02\x02\x02\u0123\u0121\x03\x02\x02" +
		"\x02\u0124\u0127\x03\x02\x02\x02\u0125\u0123\x03\x02\x02\x02\u0125\u0126" +
		"\x03\x02\x02\x02\u0126\u0128\x03\x02\x02\x02\u0127\u0125\x03\x02\x02\x02" +
		"\u0128\u0129\x07$\x02\x02\u0129<\x03\x02\x02\x02\u012A\u012B\x07$\x02" +
		"\x02\u012B\u012C\x072\x02\x02\u012C\u0131\x07$\x02\x02\u012D\u012E\x07" +
		"$\x02\x02\u012E\u012F\x07\"\x02\x02\u012F\u0131\x07$\x02\x02\u0130\u012A" +
		"\x03\x02\x02\x02\u0130\u012D\x03\x02\x02\x02\u0131>\x03\x02\x02\x02\u0132" +
		"\u0133\x07t\x02\x02\u0133\u0134\x07q\x02\x02\u0134\u0135\x07q\x02\x02" +
		"\u0135\u0136\x07v\x02\x02\u0136@\x03\x02\x02\x02\u0137\u0138\x07r\x02" +
		"\x02\u0138\u0139\x07c\x02\x02\u0139\u013A\x07e\x02\x02\u013A\u013B\x07" +
		"m\x02\x02\u013B\u013C\x07g\x02\x02\u013C\u013D\x07v\x02\x02\u013DB\x03" +
		"\x02\x02\x02\u013E\u013F\x07t\x02\x02\u013F\u0140\x07g\x02\x02\u0140\u0141" +
		"\x07r\x02\x02\u0141\u0142\x07g\x02\x02\u0142\u0143\x07c\x02\x02\u0143" +
		"\u0144\x07v\x02\x02\u0144D\x03\x02\x02\x02\u0145\u0146\x07O\x02\x02\u0146" +
		"\u0147\x07g\x02\x02\u0147\u0148\x07v\x02\x02\u0148\u0149\x07c\x02\x02" +
		"\u0149\u014A\x07F\x02\x02\u014A\u014B\x07c\x02\x02\u014B\u014C\x07v\x02" +
		"\x02\u014C\u014D\x07c\x02\x02\u014DF\x03\x02\x02\x02\u014E\u014F\x07o" +
		"\x02\x02\u014F\u0150\x07c\x02\x02\u0150\u0151\x07v\x02\x02\u0151\u0152" +
		"\x07e\x02\x02\u0152\u0153\x07j\x02\x02\u0153H\x03\x02\x02\x02\u0154\u0155" +
		"\x07<\x02\x02\u0155J\x03\x02\x02\x02\u0156\u0157\x07.\x02\x02\u0157L\x03" +
		"\x02\x02\x02\u0158\u0159\x07=\x02\x02\u0159N\x03\x02\x02\x02\u015A\u015E" +
		"\t\x04\x02\x02\u015B\u015D\t\x05\x02\x02\u015C\u015B\x03\x02\x02\x02\u015D" +
		"\u0160\x03\x02\x02\x02\u015E\u015C\x03\x02\x02\x02\u015E\u015F\x03\x02" +
		"\x02\x02\u015FP\x03\x02\x02\x02\u0160\u015E\x03\x02\x02\x02\u0161\u0166" +
		"\x07b\x02\x02\u0162\u0165\n\x06\x02\x02\u0163\u0165\t\x07\x02\x02\u0164" +
		"\u0162\x03\x02\x02\x02\u0164\u0163\x03\x02\x02\x02\u0165\u0168\x03\x02" +
		"\x02\x02\u0166\u0164\x03\x02\x02\x02\u0166\u0167\x03\x02\x02\x02\u0167" +
		"\u0169\x03\x02\x02\x02\u0168\u0166\x03\x02\x02\x02\u0169\u016A\x07b\x02" +
		"\x02\u016AR\x03\x02\x02\x02\u016B\u016C\x071\x02\x02\u016C\u016D\x071" +
		"\x02\x02\u016D\u0171\x03\x02\x02\x02\u016E\u0170\n\x07\x02\x02\u016F\u016E" +
		"\x03\x02\x02\x02\u0170\u0173\x03\x02\x02\x02\u0171\u016F\x03\x02\x02\x02" +
		"\u0171\u0172\x03\x02\x02\x02\u0172\u0174\x03\x02\x02\x02\u0173\u0171\x03" +
		"\x02\x02\x02\u0174\u0175\b*\x02\x02\u0175T\x03\x02\x02\x02\u0176\u0178" +
		"\t\b\x02\x02\u0177\u0176\x03\x02\x02\x02\u0178\u0179\x03\x02\x02\x02\u0179" +
		"\u0177\x03\x02\x02\x02\u0179\u017A\x03\x02\x02\x02\u017A\u017B\x03\x02" +
		"\x02\x02\u017B\u017C\b+\x03\x02\u017CV\x03\x02\x02\x02\x16\x02\xB9\xC4" +
		"\xCF\xDA\xE2\xEC\xF6\u0100\u010C\u0118\u011D\u0123\u0125\u0130\u015E\u0164" +
		"\u0166\u0171\u0179\x04\x02\x03\x02\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!PacketDslLexer.__ATN) {
			PacketDslLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(PacketDslLexer._serializedATN));
		}

		return PacketDslLexer.__ATN;
	}

}

